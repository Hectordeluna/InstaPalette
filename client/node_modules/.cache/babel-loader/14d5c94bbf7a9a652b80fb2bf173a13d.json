{"ast":null,"code":"/**\n * Pad number string with zeros to fixed precision\n * Don't work with exponential notation, use `from-exponential` if necessary\n * @param {string} numString\n * @param {number} precision\n * @return {string}\n */\nexport default function padZerosToFixed(numString, precision) {\n  if (!(precision > 0)) {\n    return numString;\n  }\n\n  if (typeof numString !== 'string') {\n    numString = numString.toString();\n  } // leave exponential untouched\n\n\n  if (numString.toLowerCase().indexOf('e') !== -1) {\n    return numString;\n  }\n\n  var decimalStart = numString.indexOf('.');\n  var hasDot = decimalStart !== -1;\n  var decimalEnd = numString.length;\n  var countDecimals = hasDot ? decimalEnd - decimalStart - 1 : 0;\n  var countZerosToPad = precision - countDecimals;\n  var zeros = hasDot ? '' : '.';\n\n  for (var i = 0; i < countZerosToPad; i += 1) {\n    zeros += '0';\n  } // insert zeros between number and exponential part\n\n\n  return numString.substring(0, decimalEnd) + zeros + numString.substring(decimalEnd);\n}","map":null,"metadata":{},"sourceType":"module"}