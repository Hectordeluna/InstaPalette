{"ast":null,"code":"import React,{useState}from'react';import{Container,Form,FormGroup,Label,Input,Row,Col}from'reactstrap/';import ColorDisplay from\"./ColorDisplay\";import{Box,Grid,Image,Text}from\"@chakra-ui/core\";import ErrorCard from'./ErrorCard';var ColorCard=function ColorCard(props){var displayCard=function displayCard(){if(!props.palette||props.palette.length==0){return React.createElement(ErrorCard,{iconName:\"lock\",title:\"Oopsie Woopsie!\",content:\"It looks like the user is private or doesn't have any photos.\"});}console.log(props.palette);return React.createElement(Grid,{style:{border:\"0px\"},templateColumns:\"repeat(3, 10fr)\",gap:2},props.palette.map(function(color){return React.createElement(Box,{style:{border:\"0px\"}},React.createElement(ColorDisplay,{color:color,height:150,width:150}));}));};return React.createElement(Box,{borderWidth:\"1px\",rounded:\"lg\",className:\"bg-white rounded shadow-longer\"},React.createElement(Box,{bg:\"gray.100\",color:\"gray.600\",borderColor:\"gray.400\",p:\"3\",d:\"flex\",style:{alignItems:\"center\"}},React.createElement(Image,{objectFit:\"cover\",src:props.profilePhoto,size:[\"75px\",\"80px\",\"90px\"],rounded:\"full\",className:\"shadow-sharp\"}),React.createElement(Box,null,React.createElement(Box,{color:\"gray.600\",fontWeight:\"bold\",letterSpacing:\"wide\",ml:\"2\",fontSize:[\"s\",\"m\",\"lg\"],textTransform:\"capitalize\"},props.name),React.createElement(Box,{color:\"gray.400\",ml:\"2\"},props.posts,\" posts\"))),React.createElement(Box,{p:\"3\"},displayCard()));};export default ColorCard;","map":{"version":3,"sources":["/Users/hectordeluna/development/instaPalette/client/src/components/ColorCard.js"],"names":["React","useState","Container","Form","FormGroup","Label","Input","Row","Col","ColorDisplay","Box","Grid","Image","Text","ErrorCard","ColorCard","props","displayCard","palette","length","console","log","border","map","color","alignItems","profilePhoto","name","posts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACIC,SADJ,CAEIC,IAFJ,CAGIC,SAHJ,CAIIC,KAJJ,CAKIC,KALJ,CAMIC,GANJ,CAOIC,GAPJ,KAQS,aART,CASA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,KAApB,CAA2BC,IAA3B,KAAuC,iBAAvC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAEzB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAI,CAACD,KAAK,CAACE,OAAP,EAAkBF,KAAK,CAACE,OAAN,CAAcC,MAAd,EAAwB,CAA9C,CAAiD,CAC7C,MAAO,qBAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAC,iBAAjC,CAAmD,OAAO,CAAC,+DAA3D,EAAP,CACH,CACDC,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,OAAlB,EACA,MACA,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAEI,MAAM,CAAE,KAAV,CAAb,CAAgC,eAAe,CAAC,iBAAhD,CAAkE,GAAG,CAAE,CAAvE,EACCN,KAAK,CAACE,OAAN,CAAcK,GAAd,CAAkB,SAAAC,KAAK,QAChB,qBAAC,GAAD,EAAK,KAAK,CAAE,CAAEF,MAAM,CAAE,KAAV,CAAZ,EAA+B,oBAAC,YAAD,EAAc,KAAK,CAAEE,KAArB,CAA4B,MAAM,CAAE,GAApC,CAAyC,KAAK,CAAE,GAAhD,EAA/B,CADgB,EAAvB,CADD,CADA,CAMH,CAXD,CAaA,MACI,qBAAC,GAAD,EAAK,WAAW,CAAC,KAAjB,CAAuB,OAAO,CAAC,IAA/B,CAAoC,SAAS,CAAC,gCAA9C,EACQ,oBAAC,GAAD,EAAK,EAAE,CAAC,UAAR,CAAmB,KAAK,CAAC,UAAzB,CAAoC,WAAW,CAAC,UAAhD,CAA2D,CAAC,CAAC,GAA7D,CAAiE,CAAC,CAAC,MAAnE,CAA0E,KAAK,CAAE,CAAEC,UAAU,CAAE,QAAd,CAAjF,EACI,oBAAC,KAAD,EACA,SAAS,CAAC,OADV,CAEA,GAAG,CAAET,KAAK,CAACU,YAFX,CAGA,IAAI,CAAE,CAAC,MAAD,CAAQ,MAAR,CAAe,MAAf,CAHN,CAIA,OAAO,CAAC,MAJR,CAKA,SAAS,CAAC,cALV,EADJ,CAQI,oBAAC,GAAD,MACA,oBAAC,GAAD,EACA,KAAK,CAAC,UADN,CAEA,UAAU,CAAC,MAFX,CAGA,aAAa,CAAC,MAHd,CAIA,EAAE,CAAC,GAJH,CAKA,QAAQ,CAAE,CAAC,GAAD,CAAK,GAAL,CAAS,IAAT,CALV,CAMA,aAAa,CAAC,YANd,EAQIV,KAAK,CAACW,IARV,CADA,CAWA,oBAAC,GAAD,EACA,KAAK,CAAC,UADN,CAEA,EAAE,CAAC,GAFH,EAIKX,KAAK,CAACY,KAJX,UAXA,CARJ,CADR,CA4BQ,oBAAC,GAAD,EAAK,CAAC,CAAC,GAAP,EACKX,WAAW,EADhB,CA5BR,CADJ,CAkCH,CAjDD,CAmDA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Row,\n    Col\n  } from 'reactstrap/';\nimport ColorDisplay from \"./ColorDisplay\";\nimport { Box, Grid, Image, Text } from \"@chakra-ui/core\";\nimport ErrorCard from './ErrorCard';\n\n\nconst ColorCard = (props) => {\n\n    const displayCard = () => {\n        if (!props.palette || props.palette.length == 0) {\n            return <ErrorCard iconName=\"lock\" title=\"Oopsie Woopsie!\" content=\"It looks like the user is private or doesn't have any photos.\"/>;\n        }\n        console.log(props.palette);\n        return (\n        <Grid style={{ border: \"0px\" }} templateColumns=\"repeat(3, 10fr)\" gap={2}>\n        {props.palette.map(color => (\n                <Box style={{ border: \"0px\" }}><ColorDisplay color={color} height={150} width={150}/></Box>)\n            )\n        }</Grid>);\n    };\n\n    return (\n        <Box borderWidth=\"1px\" rounded=\"lg\" className=\"bg-white rounded shadow-longer\">\n                <Box bg=\"gray.100\" color=\"gray.600\" borderColor=\"gray.400\" p=\"3\" d=\"flex\" style={{ alignItems: \"center\" }}>\n                    <Image \n                    objectFit=\"cover\"\n                    src={props.profilePhoto} \n                    size={[\"75px\",\"80px\",\"90px\"]}\n                    rounded=\"full\"\n                    className=\"shadow-sharp\"\n                    />\n                    <Box>\n                    <Box\n                    color=\"gray.600\"\n                    fontWeight=\"bold\"\n                    letterSpacing=\"wide\"\n                    ml=\"2\"\n                    fontSize={[\"s\",\"m\",\"lg\"]}\n                    textTransform=\"capitalize\"\n                    >\n                       {props.name}\n                    </Box>\n                    <Box\n                    color=\"gray.400\"\n                    ml=\"2\"\n                    >\n                        {props.posts} posts\n                    </Box>\n                    </Box>\n                </Box>\n                <Box p=\"3\">\n                    {displayCard()}\n                </Box>\n        </Box>\n    );\n}\n\nexport default ColorCard;\n"]},"metadata":{},"sourceType":"module"}