{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport Icon from \"../Icon\";\nimport { forwardRef } from \"react\";\nimport Input from \"../Input\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport Box from \"../Box\";\nvar Select = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      size = _ref.size,\n      placeholder = _ref.placeholder,\n      form = _ref.form,\n      onBlur = _ref.onBlur,\n      onKeyDown = _ref.onKeyDown,\n      onKeyUp = _ref.onKeyUp,\n      onKeyPress = _ref.onKeyPress,\n      onFocus = _ref.onFocus,\n      autoFocus = _ref.autoFocus,\n      isDisabled = _ref.isDisabled,\n      isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      name = _ref.name,\n      id = _ref.id,\n      isReadOnly = _ref.isReadOnly,\n      focusBorderColor = _ref.focusBorderColor,\n      variant = _ref.variant,\n      ariaLabel = _ref[\"aria-label\"],\n      ariaDescribedby = _ref[\"aria-describedby\"],\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      selectProps = _ref.selectProps,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"size\", \"placeholder\", \"form\", \"onBlur\", \"onKeyDown\", \"onKeyUp\", \"onKeyPress\", \"onFocus\", \"autoFocus\", \"isDisabled\", \"isInvalid\", \"isRequired\", \"name\", \"id\", \"isReadOnly\", \"focusBorderColor\", \"variant\", \"aria-label\", \"aria-describedby\", \"value\", \"defaultValue\", \"selectProps\"]);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var themedColor = colorMode === \"dark\" ? \"whiteAlpha.800\" : \"inherit\";\n  var opacity = isReadOnly || isDisabled ? 0.5 : null;\n  return jsx(Box, _extends({\n    position: \"relative\",\n    width: \"100%\",\n    color: themedColor\n  }, rest), jsx(Input, _extends({\n    as: \"select\",\n    size: size,\n    appearance: \"none\",\n    ref: ref,\n    pr: \"2rem\",\n    pb: \"px\",\n    lineHeight: \"normal\"\n  }, {\n    form: form,\n    placeholder: placeholder,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onKeyPress: onKeyPress,\n    onFocus: onFocus,\n    autoFocus: autoFocus,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isRequired: isRequired,\n    value: value,\n    defaultValue: defaultValue,\n    name: name,\n    id: id,\n    isReadOnly: isReadOnly,\n    focusBorderColor: focusBorderColor,\n    variant: variant,\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": ariaDescribedby\n  }, selectProps), placeholder && jsx(\"option\", {\n    value: \"\"\n  }, placeholder), children), jsx(Box, {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    width: \"1.5rem\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    right: \"0.5rem\",\n    top: \"50%\",\n    pointerEvents: \"none\",\n    opacity: opacity,\n    zIndex: 2,\n    transform: \"translateY(-50%)\"\n  }, jsx(Icon, {\n    name: \"chevron-down\",\n    color: \"currentColor\",\n    size: \"20px\"\n  })));\n});\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}