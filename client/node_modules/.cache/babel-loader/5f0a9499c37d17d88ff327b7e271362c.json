{"ast":null,"code":"var _jsxFileName = \"/Users/hectordeluna/development/instaPalette/client/src/components/ColorCard.js\";\nimport React, { useState } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap/';\nimport ColorDisplay from \"./ColorDisplay\";\nimport { Box, Grid, Image, Text } from \"@chakra-ui/core\";\nimport ErrorCard from './ErrorCard';\n\nconst ColorCard = props => {\n  const displayCard = () => {\n    if (!props.palette) {\n      return React.createElement(ErrorCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Spinner, {\n      color: \"primary\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Box, {\n    borderWidth: \"1px\",\n    rounded: \"lg\",\n    className: \"bg-white rounded shadow-longer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Box, {\n    bg: \"gray.100\",\n    color: \"gray.600\",\n    borderColor: \"gray.400\",\n    p: \"3\",\n    d: \"flex\",\n    style: {\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Image, {\n    objectFit: \"cover\",\n    src: props.profilePhoto,\n    size: [\"75px\", \"80px\", \"90px\"],\n    rounded: \"full\",\n    className: \"shadow-sharp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Box, {\n    color: \"gray.600\",\n    fontWeight: \"bold\",\n    letterSpacing: \"wide\",\n    ml: \"2\",\n    fontSize: [\"s\", \"m\", \"lg\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.name)), React.createElement(Box, {\n    p: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ErrorCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default ColorCard;","map":{"version":3,"sources":["/Users/hectordeluna/development/instaPalette/client/src/components/ColorCard.js"],"names":["React","useState","Container","Form","FormGroup","Label","Input","Row","Col","ColorDisplay","Box","Grid","Image","Text","ErrorCard","ColorCard","props","displayCard","palette","alignItems","profilePhoto","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,GANJ,EAOIC,GAPJ,QAQS,aART;AASA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,iBAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAI,CAACD,KAAK,CAACE,OAAX,EAAoB;AAChB,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GALD;;AAMA,SACI,oBAAC,GAAD;AAAK,IAAA,WAAW,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAC,IAA/B;AAAoC,IAAA,SAAS,EAAC,gCAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,UAAR;AAAmB,IAAA,KAAK,EAAC,UAAzB;AAAoC,IAAA,WAAW,EAAC,UAAhD;AAA2D,IAAA,CAAC,EAAC,GAA7D;AAAiE,IAAA,CAAC,EAAC,MAAnE;AAA0E,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,SAAS,EAAC,OADV;AAEA,IAAA,GAAG,EAAEH,KAAK,CAACI,YAFX;AAGA,IAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAHN;AAIA,IAAA,OAAO,EAAC,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,GAAD;AACA,IAAA,KAAK,EAAC,UADN;AAEA,IAAA,UAAU,EAAC,MAFX;AAGA,IAAA,aAAa,EAAC,MAHd;AAIA,IAAA,EAAE,EAAC,GAJH;AAKA,IAAA,QAAQ,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOIJ,KAAK,CAACK,IAPV,CARJ,CADR,EAmBQ,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAnBR,CADJ;AA+BH,CAvCD;;AAyCA,eAAeN,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Row,\n    Col\n  } from 'reactstrap/';\nimport ColorDisplay from \"./ColorDisplay\";\nimport { Box, Grid, Image, Text } from \"@chakra-ui/core\";\nimport ErrorCard from './ErrorCard';\n\n\nconst ColorCard = (props) => {\n\n    const displayCard = () => {\n        if (!props.palette) {\n            return <ErrorCard/>;\n        }\n        return <Spinner color=\"primary\" size=\"lg\"/>;\n    };\n    return (\n        <Box borderWidth=\"1px\" rounded=\"lg\" className=\"bg-white rounded shadow-longer\">\n                <Box bg=\"gray.100\" color=\"gray.600\" borderColor=\"gray.400\" p=\"3\" d=\"flex\" style={{ alignItems: \"center\" }}>\n                    <Image \n                    objectFit=\"cover\"\n                    src={props.profilePhoto} \n                    size={[\"75px\",\"80px\",\"90px\"]}\n                    rounded=\"full\"\n                    className=\"shadow-sharp\"\n                    />\n                    <Box\n                    color=\"gray.600\"\n                    fontWeight=\"bold\"\n                    letterSpacing=\"wide\"\n                    ml=\"2\"\n                    fontSize={[\"s\",\"m\",\"lg\"]}\n                    >\n                       {props.name}\n                    </Box>\n                </Box>\n                <Box p=\"3\">\n                    {/* <Grid style={{ border: \"0px\" }} templateColumns=\"repeat(3, 10fr)\" gap={2}>\n                            {props.palette && props.palette.map(color => (\n                                    <Box style={{ border: \"0px\" }}><ColorDisplay color={color} height={150} width={150}/></Box>)\n                                )\n                            }\n                    </Grid> */}\n                    <ErrorCard/>\n                </Box>\n        </Box>\n    );\n}\n\nexport default ColorCard;\n"]},"metadata":{},"sourceType":"module"}