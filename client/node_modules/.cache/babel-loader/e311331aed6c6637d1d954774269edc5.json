{"ast":null,"code":"import _slicedToArray from \"/Users/hectordeluna/development/instaPalette/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hectordeluna/development/instaPalette/client/src/components/FormUser.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, FormGroup, Label, Row, Col, ListGroup, ListGroupItem, Modal, ModalHeader, ModalBody, ModalFooter, Button, Spinner, Fade, Alert } from 'reactstrap/';\nimport ColorCard from \"./ColorCard\";\nimport ErrorCard from \"./ErrorCard\";\nimport Hooks from \"./../services/hooks\";\nimport paletteService from \"./../services/paletteService\";\nimport { Box, Grid, Input, InputGroup, InputLeftElement, Icon } from \"@chakra-ui/core\";\n\nconst FormUser = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState({\n    colors: [],\n    profilePhoto: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        palette = _useState6[0],\n        setPalette = _useState6[1];\n\n  const _useState7 = useState(-1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        search = _useState8[0],\n        setSearch = _useState8[1];\n\n  const _useState9 = useState({\n    error: false,\n    message: \"\"\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        error = _useState10[0],\n        setError = _useState10[1];\n\n  const save = e => {\n    setInput(e.target.value);\n    console.log(value);\n  };\n\n  const onSave = async e => {\n    setSearch(true);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (value != \"\") {\n        const result = await paletteService.getPalette(value);\n\n        if (result.length == 0) {\n          setError({\n            error: true,\n            message: \"Make sure the user is public and has photos! uWu\"\n          });\n        } else {\n          console.log(result);\n          setPalette(result);\n          setName(value);\n        }\n\n        setSearch(false);\n      } else {\n        setSearch(false);\n      }\n    };\n\n    if (search) {\n      setPalette([]);\n      fetchData();\n    }\n  }, [search]);\n\n  const displayLoading = () => {\n    if (!search) {\n      return null;\n    }\n\n    return React.createElement(Spinner, {\n      color: \"primary\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  };\n\n  const displayInitial = () => {\n    if (search != -1) {\n      return null;\n    }\n\n    return React.createElement(ErrorCard, {\n      iconName: \"search\",\n      title: \"Get your Palette!\",\n      content: \"Get your Color Palette with your Instagram username!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"6\",\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: e => onSave(e),\n    style: {\n      position: \"relative\",\n      top: \"-50px\",\n      zIndex: \"10\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(InputLeftElement, {\n    children: React.createElement(Icon, {\n      name: \"search\",\n      color: \"gray.300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Input, {\n    className: \"shadow-sharp\",\n    variant: \"flushed\",\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Username...\",\n    background: \"#FFFFFF\",\n    borderRadius: \"5px\",\n    lineHeight: \"1.5\",\n    border: \"none\",\n    onChange: e => setInput(e.target.value),\n    style: {\n      WebkitAppearance: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))))), React.createElement(Row, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      paddingBottom: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, displayLoading(), displayInitial(), React.createElement(Fade, {\n    in: !search,\n    timeout: 700,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, palette.profilePhoto && React.createElement(ColorCard, {\n    name: name,\n    palette: palette.colors,\n    profilePhoto: palette.profilePhoto,\n    posts: palette.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))));\n};\n\nexport default FormUser;","map":{"version":3,"sources":["/Users/hectordeluna/development/instaPalette/client/src/components/FormUser.js"],"names":["React","useState","useEffect","Container","Form","FormGroup","Label","Row","Col","ListGroup","ListGroupItem","Modal","ModalHeader","ModalBody","ModalFooter","Button","Spinner","Fade","Alert","ColorCard","ErrorCard","Hooks","paletteService","Box","Grid","Input","InputGroup","InputLeftElement","Icon","FormUser","props","value","setInput","name","setName","colors","profilePhoto","palette","setPalette","search","setSearch","error","message","setError","save","e","target","console","log","onSave","preventDefault","fetchData","result","getPalette","length","displayLoading","displayInitial","display","justifyContent","position","top","zIndex","WebkitAppearance","paddingBottom","posts"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,SAPJ,EAQIC,aARJ,EASIC,KATJ,EAUIC,WAVJ,EAWIC,SAXJ,EAYIC,WAZJ,EAaIC,MAbJ,EAcIC,OAdJ,EAeIC,IAfJ,EAgBIC,KAhBJ,QAiBS,aAjBT;AAkBA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,gBAAvC,EAAyDC,IAAzD,QAAqE,iBAArE;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,oBAEE7B,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEjB8B,KAFiB;AAAA,QAEVC,QAFU;;AAAA,qBAGA/B,QAAQ,CAAC,EAAD,CAHR;AAAA;AAAA,QAGjBgC,IAHiB;AAAA,QAGXC,OAHW;;AAAA,qBAIMjC,QAAQ,CAAC;AAAEkC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,YAAY,EAAE;AAA5B,GAAD,CAJd;AAAA;AAAA,QAIjBC,OAJiB;AAAA,QAIRC,UAJQ;;AAAA,qBAKIrC,QAAQ,CAAC,CAAC,CAAF,CALZ;AAAA;AAAA,QAKjBsC,MALiB;AAAA,QAKTC,SALS;;AAAA,qBAMEvC,QAAQ,CAAC;AAAEwC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CANV;AAAA;AAAA,QAMjBD,KANiB;AAAA,QAMVE,QANU;;AAQxB,QAAMC,IAAI,GAAGC,CAAC,IAAI;AACdb,IAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASf,KAAV,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACH,GAHD;;AAKA,QAAMkB,MAAM,GAAG,MAAOJ,CAAP,IAAa;AACxBL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,CAAC,CAACK,cAAF;AACH,GAHD;;AAKAhD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiD,SAAS,GAAG,YAAY;AAC1B,UAAIpB,KAAK,IAAI,EAAb,EAAiB;AACb,cAAMqB,MAAM,GAAG,MAAM9B,cAAc,CAAC+B,UAAf,CAA0BtB,KAA1B,CAArB;;AAEA,YAAIqB,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACpBX,UAAAA,QAAQ,CAAC;AAACF,YAAAA,KAAK,EAAE,IAAR;AAAcC,YAAAA,OAAO,EAAE;AAAvB,WAAD,CAAR;AACH,SAFD,MAEO;AACHK,UAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAd,UAAAA,UAAU,CAACc,MAAD,CAAV;AACAlB,UAAAA,OAAO,CAACH,KAAD,CAAP;AACH;;AAEDS,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH,OAZD,MAYO;AACHA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,KAhBD;;AAkBA,QAAID,MAAJ,EAAY;AACRD,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAa,MAAAA,SAAS;AACZ;AACJ,GAvBQ,EAuBN,CAACZ,MAAD,CAvBM,CAAT;;AAyBA,QAAMgB,cAAc,GAAG,MAAM;AACzB,QAAI,CAAChB,MAAL,EAAa;AACT,aAAO,IAAP;AACH;;AACD,WAAO,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GALD;;AAOA,QAAMiB,cAAc,GAAG,MAAM;AACzB,QAAIjB,MAAM,IAAI,CAAC,CAAf,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,WAAO,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,QAApB;AAA6B,MAAA,KAAK,EAAC,mBAAnC;AAAuD,MAAA,OAAO,EAAC,sDAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAND;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACkB,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEb,CAAC,IAAII,MAAM,CAACJ,CAAD,CAA3B;AAAgC,IAAA,KAAK,EAAE;AAAEc,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,OAA7B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,KAAD;AACA,IAAA,SAAS,EAAC,cADV;AAEA,IAAA,OAAO,EAAC,SAFR;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,EAAE,EAAC,UALH;AAMA,IAAA,WAAW,EAAC,aANZ;AAOA,IAAA,UAAU,EAAC,SAPX;AAQA,IAAA,YAAY,EAAC,KARb;AASA,IAAA,UAAU,EAAC,KATX;AAUA,IAAA,MAAM,EAAC,MAVP;AAWA,IAAA,QAAQ,EAAEhB,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASf,KAAV,CAXvB;AAYA,IAAA,KAAK,EAAE;AAAE+B,MAAAA,gBAAgB,EAAE;AAApB,KAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADR,CADJ,CADJ,CADJ,EAwBI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACL,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,QAAlC;AAA4CK,MAAAA,aAAa,EAAE;AAA3D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,cAAc,EADpB,EAEMC,cAAc,EAFpB,EAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAACjB,MAAX;AAAmB,IAAA,OAAO,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACD,YAAR,IAAyB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEH,IAAjB;AAAuB,IAAA,OAAO,EAAEI,OAAO,CAACF,MAAxC;AAAgD,IAAA,YAAY,EAAEE,OAAO,CAACD,YAAtE;AAAoF,IAAA,KAAK,EAAEC,OAAO,CAAC2B,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,CAHJ,CAxBJ,CADJ,CADJ;AAoCH,CA9FD;;AAgGA,eAAenC,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Container,\n    Form,\n    FormGroup,\n    Label,\n    Row,\n    Col,\n    ListGroup,\n    ListGroupItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    Spinner,\n    Fade,\n    Alert\n  } from 'reactstrap/';\nimport ColorCard from \"./ColorCard\";\nimport ErrorCard from \"./ErrorCard\";\nimport Hooks from \"./../services/hooks\";\nimport paletteService from \"./../services/paletteService\";\nimport { Box, Grid, Input, InputGroup, InputLeftElement, Icon } from \"@chakra-ui/core\";\n\nconst FormUser = (props) => {\n\n    const [value, setInput] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [palette, setPalette] = useState({ colors: [], profilePhoto: \"\" });\n    const [search, setSearch] = useState(-1);\n    const [error, setError] = useState({ error: false, message: \"\" });\n\n    const save = e => {\n        setInput(e.target.value);\n        console.log(value);\n    };\n\n    const onSave = async (e) => {\n        setSearch(true);\n        e.preventDefault();\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (value != \"\") {\n                const result = await paletteService.getPalette(value);\n\n                if (result.length == 0) {\n                    setError({error: true, message: \"Make sure the user is public and has photos! uWu\"});\n                } else {\n                    console.log(result);\n                    setPalette(result);\n                    setName(value);\n                }\n\n                setSearch(false);\n            } else {\n                setSearch(false);\n            }\n        };\n\n        if (search) {\n            setPalette([]);\n            fetchData();\n        }\n    }, [search]);\n\n    const displayLoading = () => {\n        if (!search) {\n            return null;\n        }\n        return <Spinner color=\"primary\" size=\"lg\"/>;\n    };\n\n    const displayInitial = () => {\n        if (search != -1) {\n            return null;\n        }\n\n        return <ErrorCard iconName=\"search\" title=\"Get your Palette!\" content=\"Get your Color Palette with your Instagram username!\" />;\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row style={{display: 'flex', justifyContent: 'center'}}>\n                    <Col md=\"6\" sm=\"12\">\n                        <Form onSubmit={e => onSave(e)} style={{ position: \"relative\", top: \"-50px\", zIndex: \"10\" }}>\n                                <InputGroup>\n                                <InputLeftElement children={<Icon name=\"search\" color=\"gray.300\" />} />\n                                <Input \n                                className=\"shadow-sharp\"\n                                variant=\"flushed\" \n                                type=\"text\" \n                                name=\"username\" \n                                id=\"username\" \n                                placeholder=\"Username...\" \n                                background=\"#FFFFFF\"\n                                borderRadius=\"5px\"\n                                lineHeight=\"1.5\"\n                                border=\"none\"\n                                onChange={e => setInput(e.target.value)}\n                                style={{ WebkitAppearance: \"none\" }}\n                                />\n                                </InputGroup>\n                        </Form>\n                    </Col>\n                </Row>\n                <Row style={{display: 'flex', justifyContent: 'center', paddingBottom: \"30px\"}}>\n                    { displayLoading() }\n                    { displayInitial() }\n                    <Fade in={!search} timeout={700}>\n                        {palette.profilePhoto && (<ColorCard name={name} palette={palette.colors} profilePhoto={palette.profilePhoto} posts={palette.posts}/>)}\n                    </Fade>\n                </Row>            \n            </Container>\n        </div>\n    );\n}\n\nexport default FormUser;\n"]},"metadata":{},"sourceType":"module"}