{"ast":null,"code":"import _slicedToArray from \"/Users/hectordeluna/development/instaPalette/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hectordeluna/development/instaPalette/client/src/components/FormUser.js\";\nimport React, { useState } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap/';\n\nconst AppNavbar = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return React.createElement(Container, {\n    style: {\n      backgroundColor: \"blue\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: \"blue\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"@Username...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))))));\n};\n\nexport default AppNavbar;","map":{"version":3,"sources":["/Users/hectordeluna/development/instaPalette/client/src/components/FormUser.js"],"names":["React","useState","Container","Form","FormGroup","Label","Input","Row","Col","AppNavbar","props","isOpen","setIsOpen","toggle","backgroundColor","position","left","top","transform"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,GANJ,EAOIC,GAPJ,QAQS,aART;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,oBAEGT,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,QAElBU,MAFkB;AAAA,QAEVC,SAFU;;AAIzB,QAAMC,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEA,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACG,MAAAA,eAAe,EAAE;AAAlB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAChBC,MAAAA,QAAQ,EAAE,UADM;AACMC,MAAAA,IAAI,EAAE,KADZ;AACmBC,MAAAA,GAAG,EAAE,KADxB;AAEhBC,MAAAA,SAAS,EAAE,uBAFK;AAGhBJ,MAAAA,eAAe,EAAE;AAHD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,EAAE,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CANJ,CADJ,CADJ;AAkBH,CAxBD;;AA0BA,eAAeL,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Row,\n    Col\n  } from 'reactstrap/';\n\nconst AppNavbar = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <Container style={{backgroundColor: \"blue\" }}>\n            <Row style={{\n        position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: \"blue\"\n    }}\n>\n                <Col md=\"12\">\n                    <Form>\n                        <FormGroup>\n                            <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"@Username...\" />\n                        </FormGroup>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default AppNavbar;\n"]},"metadata":{},"sourceType":"module"}